import java.io.*;
import java.util.*;

public class Main {
  public static int[] smallest(int[] nums, int k) {
    Stack<Integer> stk = new Stack<>();
    
    for(int i=0;i<nums.length;i++){
        
        while(stk.size()>0 && nums[i]<stk.peek() && (nums.length-i)>=(k-stk.size()+1)){
        stk.pop();    
        }
        
        if(stk.size()<k){
            stk.push(nums[i]);
        }
    }
    
    int[] ans = new int[stk.size()];
    int idx = stk.size()-1;
    
    while(stk.size()>0){
        ans[idx--] = stk.pop();
    }
    
    return ans;
  }

  public static void main(String[] args) throws Exception {
    BufferedReader read = new BufferedReader(new InputStreamReader(System.in));

    int n = Integer.parseInt(read.readLine());
    int arr[] = new int[n];
    for (int i = 0; i < n; i++)arr[i] = Integer.parseInt(read.readLine());
    int k = Integer.parseInt(read.readLine());
    int ans[] = smallest(arr, k);
    System.out.println(ans.length);

    for (int e : ans) {
      System.out.println(e);
    }

  }
}
