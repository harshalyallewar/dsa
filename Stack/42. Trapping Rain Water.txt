class Solution {
    public int trap(int[] height) {
        Stack<Integer> stk = new Stack<>();
        stk.push(0);
        int ans = 0;
        
        for(int i=0;i<height.length;i++){
            
            while(stk.size()>0 && height[i]>=height[stk.peek()]){
                int rm = i;
                int curr = stk.pop();
                if(stk.size()==0) break;
                int lm = stk.peek();
                int width = rm-lm-1;
                int hi = Math.min(height[rm],height[lm])-height[curr];
                ans = ans + (hi*width);
            }
            stk.push(i);
        }
        return ans;
    }
}
