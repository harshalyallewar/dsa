/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode addOneRow(TreeNode root, int val, int depth) {
        if(root==null) return new TreeNode(val);
     
        if(depth==1){
            TreeNode newroot = new TreeNode(val);
            newroot.left = root;
            return newroot;
        }
        addOneRowHelper(root, val, depth-1);
            
        return root;
    }
    
    public void addOneRowHelper(TreeNode root, int val, int depth) {
        if(root==null) return;
        if(depth==1){
            TreeNode newleft = new TreeNode(val);
            TreeNode newright = new TreeNode(val);
            
            newleft.left = root.left;
            newright.right = root.right;
            root.left = newleft;
            root.right = newright;
            return;
        }
        
        addOneRowHelper(root.left, val, depth-1);
        addOneRowHelper(root.right, val, depth-1);
    }
}
